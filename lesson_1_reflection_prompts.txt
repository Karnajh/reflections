How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Gives a better idea of how the code works.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Can learn to code faster by viewing example of valid and invalid code. Revert easilly to previously working version of code and pintpoint and avert errors better.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro: You can save anytime you feel something is important and can be used offline. Faster better on the mind and less troublesome to go throught the changes.
    Con: You HAVE to think about saving, therefore prone to user error.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    On multiple files it is easier to manage and keep track of what changed when on each file in one go.

How can you use the commands git log and git diff to view the history of files?

    To keep track of changes and make it easier to spot the changes made.

How might using version control make you more confident to make changes that
could break something?

    Because it's not that hard to revert back to a previous version where everything is fine so I can play with anything without being scared of breaking something.

Now that you have your workspace set up, what do you want to try using Git for?

    Manage side-projects and learn how ot tap on the potential of this tool.
